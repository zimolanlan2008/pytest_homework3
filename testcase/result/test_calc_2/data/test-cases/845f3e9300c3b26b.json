{
  "uid" : "845f3e9300c3b26b",
  "name" : "test_mul[None-9-0]",
  "fullName" : "test_calc.TestCalc#test_mul",
  "historyId" : "1d94fd8cc87423711be085602d3e7d31",
  "time" : {
    "start" : 1612147341851,
    "stop" : 1612147341851,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "self = <testcase.test_calc.TestCalc object at 0x0000023BC139FC40>, a = None, b = 9, expect = 0, get_calc = <test_code.calc.Calculator object at 0x0000023BC1308670>, caculate = None\n\n    @pytest.mark.parametrize(\"a,b,expect\", muldatas_data)\n    @pytest.mark.run(order=3)\n    def test_mul(self, a, b, expect,get_calc,caculate):\n        if isinstance(a, str):\n            print(\"非数字类型\")\n            assert False\n    \n        elif a is None:\n            print(\"不能为空\")\n>           assert False\nE           assert False\n\ntest_calc.py:134: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "caculate",
    "time" : {
      "start" : 1612147341850,
      "stop" : 1612147341850,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "get_calc",
    "time" : {
      "start" : 1612147341617,
      "stop" : 1612147341617,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False",
    "statusTrace" : "self = <testcase.test_calc.TestCalc object at 0x0000023BC139FC40>, a = None, b = 9, expect = 0, get_calc = <test_code.calc.Calculator object at 0x0000023BC1308670>, caculate = None\n\n    @pytest.mark.parametrize(\"a,b,expect\", muldatas_data)\n    @pytest.mark.run(order=3)\n    def test_mul(self, a, b, expect,get_calc,caculate):\n        if isinstance(a, str):\n            print(\"非数字类型\")\n            assert False\n    \n        elif a is None:\n            print(\"不能为空\")\n>           assert False\nE           assert False\n\ntest_calc.py:134: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6dcbb7859652b452",
      "name" : "stdout",
      "source" : "6dcbb7859652b452.txt",
      "type" : "text/plain",
      "size" : 39
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "caculate::0",
    "time" : {
      "start" : 1612147341854,
      "stop" : 1612147341855,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "run(order=3)"
  }, {
    "name" : "suite",
    "value" : "test_calc"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc"
  }, {
    "name" : "host",
    "value" : "LAPTOP-CV4D84I5"
  }, {
    "name" : "thread",
    "value" : "32636-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_calc"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "a",
    "value" : "None"
  }, {
    "name" : "b",
    "value" : "9"
  }, {
    "name" : "expect",
    "value" : "0"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=3)" ]
  },
  "source" : "845f3e9300c3b26b.json",
  "parameterValues" : [ "None", "9", "0" ]
}