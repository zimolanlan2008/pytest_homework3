{
  "uid" : "ae8c70ee35ab0d88",
  "name" : "test_sub[kkk-99--99]",
  "fullName" : "test_calc.TestCalc#test_sub",
  "historyId" : "82e1fb35cb6d1ce8dfc89bf3d7a2a87a",
  "time" : {
    "start" : 1612147341777,
    "stop" : 1612147341777,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "self = <testcase.test_calc.TestCalc object at 0x0000023BC13B1610>, a = 'kkk', b = 99, expect = -99, get_calc = <test_code.calc.Calculator object at 0x0000023BC1308670>\n\n    @pytest.mark.parametrize(\"a,b,expect\", subdatas_data)\n    @pytest.mark.run(order=2)\n    def test_sub(self, a, b, expect,get_calc):\n    \n        if isinstance(a, str):\n            print(\"非数字类型\")\n>           assert False\nE           assert False\n\ntest_calc.py:105: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_calc",
    "time" : {
      "start" : 1612147341617,
      "stop" : 1612147341617,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False",
    "statusTrace" : "self = <testcase.test_calc.TestCalc object at 0x0000023BC13B1610>, a = 'kkk', b = 99, expect = -99, get_calc = <test_code.calc.Calculator object at 0x0000023BC1308670>\n\n    @pytest.mark.parametrize(\"a,b,expect\", subdatas_data)\n    @pytest.mark.run(order=2)\n    def test_sub(self, a, b, expect,get_calc):\n    \n        if isinstance(a, str):\n            print(\"非数字类型\")\n>           assert False\nE           assert False\n\ntest_calc.py:105: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a2532b9910de7415",
      "name" : "stdout",
      "source" : "a2532b9910de7415.txt",
      "type" : "text/plain",
      "size" : 16
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "run(order=2)"
  }, {
    "name" : "suite",
    "value" : "test_calc"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc"
  }, {
    "name" : "host",
    "value" : "LAPTOP-CV4D84I5"
  }, {
    "name" : "thread",
    "value" : "32636-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_calc"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "a",
    "value" : "'kkk'"
  }, {
    "name" : "b",
    "value" : "99"
  }, {
    "name" : "expect",
    "value" : "-99"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=2)" ]
  },
  "source" : "ae8c70ee35ab0d88.json",
  "parameterValues" : [ "'kkk'", "99", "-99" ]
}